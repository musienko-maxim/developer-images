#
# Copyright (c) 2019-2021 Red Hat, Inc.
# This program and the accompanying materials are made
# available under the terms of the Eclipse Public License 2.0
# which is available at https://www.eclipse.org/legal/epl-2.0/
#
# SPDX-License-Identifier: EPL-2.0
#
# Contributors:
#   Red Hat, Inc. - initial API and implementation
#

name: Empty workspace API test
on:
  pull_request:
    paths-ignore:
      - '**/*.md'
      - devfile.yaml
      - LICENSE


env:
   USERSTORY: CloneGitRepoAPI
   TS_API_TEST_KUBERNETES_COMMAND_LINE_TOOL: kubectl
   DEPLOYMENT_TIMEOUT: 90s

jobs:
  build_image_runner:
    # reuse existing workflow
    uses: ./.github/workflows/ubi8-build.yaml
    secrets:
      QUAY_USERNAME: ${{ secrets.QUAY_USERNAME }}
      QUAY_PASSWORD: ${{ secrets.QUAY_PASSWORD }}

  workspace-api-tests-on-minikube:
    runs-on: ubuntu-22.04
    needs: build_image_runner
    env:
      imageTag: ${{ needs.build_image_runner.outputs.uniq_tag }}
    steps:
    - name: Read artifact
      run: |
        echo ${{ env.imageTag }}

    - name: Checkout WTO
      uses: actions/checkout@master
      with:
        repository: devfile/devworkspace-operator
        path: devworkspace-operator

    - name: Checkout tests codebase
      uses: actions/checkout@master
      with:
        repository: eclipse/che
        path: che
 
    - name: Install NodeJs
      uses: actions/setup-node@v3

    - name: Start minikube cluster
      id: run-minikube
      uses: che-incubator/setup-minikube-action@next
      with:
        minikube-version: v1.23.2

    - name: Setup cert manager
      run: |
        cd devworkspace-operator
        make install_cert_manager
        kubectl wait deployment -n cert-manager cert-manager --for condition=Available=True --timeout=$DEPLOYMENT_TIMEOUT
        kubectl wait deployment -n cert-manager cert-manager-cainjector --for condition=Available=True --timeout=$DEPLOYMENT_TIMEOUT
        kubectl wait deployment -n cert-manager cert-manager-webhook --for condition=Available=True --timeout=$DEPLOYMENT_TIMEOUT

    - name: Setup DWO
      run: |
        cd devworkspace-operator
        make install

    - name: Pre-pull image on minikube
      run: |
        minikube ssh "docker pull ${{ env.imageTag }}"

    - name: Run Empty workspace smoke test
      run: |
        export TS_API_TEST_UDI_IMAGE=${{ env.imageTag }}
        cd che/tests/e2e
        npm i
        npm run driver-less-test

